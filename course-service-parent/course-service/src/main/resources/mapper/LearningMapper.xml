<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.af.course.mapper.LearningMapper">
    <resultMap id="learningResultMap" type="com.af.course.api.entity.Learning">
        <id column="id" property="id"/>
        <result column="lesson_id" property="lessonId"/>
        <result column="course_id" property="courseId"/>
        <result column="question_id" property="questionId"/>
        <result column="number" property="number"/>
        <result column="learning_title" property="learningTitle"/>
        <result column="limit_date" property="limitDate" javaType="java.util.Date" jdbcType="TIMESTAMP"/>
        <result column="create_date" property="createDate" javaType="java.util.Date" jdbcType="TIMESTAMP"/>
        <result column="modify_date" property="modifyDate" javaType="java.util.Date" jdbcType="TIMESTAMP"/>
    </resultMap>

    <resultMap id="lessonLearningResultMap" type="com.af.course.api.vo.LessonLearningVo">
        <result column="lesson_id" property="lessonId"/>
        <result column="lesson_name" property="lessonName"/>
        <result column="course_id" property="courseId"/>
        <result column="question_id" property="questionId"/>
        <result column="number" property="number"/>
        <result column="learning_title" property="learningTitle"/>
        <result column="limit_date" property="limitDate" javaType="java.util.Date" jdbcType="TIMESTAMP"/>
        <result column="create_date" property="createDate" javaType="java.util.Date" jdbcType="TIMESTAMP"/>
    </resultMap>

    <sql id="selectLearning">
        SELECT
            a.id,
            a.lesson_id,
            a.course_id,
            a.question_id,
            a.number,
            a.learning_title,
            a.limit_date,
            a.create_date,
            a.modify_date
        FROM learning a
    </sql>

    <sql id="selectLessonLearning">
        SELECT
            l.lesson_id,
            l.lesson_name,
            a.course_id,
            a.question_id,
            a.number,
            a.learning_title,
            a.limit_date,
            a.create_date
        FROM lesson l left join learning a on l.lesson_id = a.lesson_id
    </sql>

    <!-- where 条件 -->
    <sql id="whereColumnList">
        <if test="lessonId != null and lessonId != ''">
            and a.lesson_id = #{lessonId}
        </if>
        <if test="courseId != null and courseId != ''">
            and a.course_id = #{courseId}
        </if>
        <if test="learningTitle != null and learningTitle != ''">
            and a.learning_title = #{learningTitle}
        </if>
        <if test="id != null">
            and a.id = #{id}
        </if>
    </sql>

    <select id="findList" resultMap="learningResultMap">
        <include refid="selectLearning"/>
        WHERE a.is_deleted = 0
        <include refid="whereColumnList"/>
        group by learning_title
    </select>

    <select id="findLearningList" resultMap="lessonLearningResultMap">
        <include refid="selectLessonLearning"/>
        WHERE a.is_deleted = 0
        <include refid="whereColumnList"/>
        group by learning_title
    </select>

    <select id="findMaxLearning" resultType="int">
        select max(number) from learning where learning_title = #{learningTitle}
    </select>

    <select id="existLearningTitle" resultType="int">
        select ifnull((select 1 from learning where learning_title = #{learningTitle} limit 1), 0)
    </select>

    <select id="get" resultMap="learningResultMap">
        <include refid="selectLearning"/>
        WHERE a.is_deleted = 0
        <include refid="whereColumnList"/>
        group by learning_title
    </select>

    <update id="update">
        update learning set
        <if test="limitDate != null">
            limit_date = #{limitDate, jdbcType=TIMESTAMP, javaType=java.util.Date},
        </if>
        modify_date = #{modifyDate, jdbcType=TIMESTAMP, javaType=java.util.Date}
        where learning_title = #{learningTitle}
    </update>

    <insert id="insert">
        insert into learning (
            id,
            lesson_id,
            course_id,
            question_id,
            number,
            learning_title,
            limit_date,
            create_date,
            modify_date,
            is_deleted
        ) values (
            #{id},
            #{lessonId},
            #{courseId},
            #{questionId},
            #{number},
            #{learningTitle},
            #{limitDate, jdbcType=TIMESTAMP, javaType=java.util.Date},
            #{createDate, jdbcType=TIMESTAMP, javaType=java.util.Date},
            #{modifyDate, jdbcType=TIMESTAMP, javaType=java.util.Date},
            #{isDeleted, jdbcType=INTEGER}
        );
    </insert>


    <update id="delete">
        UPDATE learning set is_deleted = 1 WHERE id = #{id}
    </update>

</mapper>
